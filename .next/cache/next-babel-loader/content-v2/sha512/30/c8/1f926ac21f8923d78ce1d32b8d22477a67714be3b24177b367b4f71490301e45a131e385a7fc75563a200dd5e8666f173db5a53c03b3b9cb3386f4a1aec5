{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mohamadhasan tabrizi\\\\Desktop\\\\capitalnext\\\\pages\\\\signal\\\\[signalId].js\";\nimport { useRouter } from \"next/router\";\nimport SignalDetail from \"../../components/signal/signaldetail\";\nimport axios from \"axios\";\n\nconst signalDetail = props => {\n  const signalData = props.signals;\n  console.log(signalData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignalDetail, {\n      signalData: signalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nconst getData = async () => {\n  const signals = await axios.get(`http://127.0.0.2:8000/api/v1/signal`).then(res => res.data.signals);\n  return signals;\n};\n\nexport const getStaticProps = async ctx => {\n  const {\n    params\n  } = ctx;\n  const signalId = params.signalId;\n  const signals = await getData();\n\n  if (!signals) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      signals\n    },\n    revalidate: 60\n  };\n};\nexport const getStaticPaths = async ctx => {\n  const signals = await getData(); //creating id array\n\n  console.log(signals);\n  const ids = signals.map(signal => signal._id); //converting ids to the form {params:{signalId:id}}\n\n  const params = ids.map(id => ({\n    params: {\n      signalId: id\n    }\n  })); // paths: {params:{signalId:id}}\n\n  return {\n    paths: params,\n    fallback: \"blocking\"\n  };\n};\nexport default signalDetail;","map":{"version":3,"sources":["C:/Users/mohamadhasan tabrizi/Desktop/capitalnext/pages/signal/[signalId].js"],"names":["useRouter","SignalDetail","axios","signalDetail","props","signalData","signals","console","log","getData","get","then","res","data","getStaticProps","ctx","params","signalId","notFound","revalidate","getStaticPaths","ids","map","signal","_id","id","paths","fallback"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B,QAAMC,UAAU,GAAED,KAAK,CAACE,OAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,sBACI;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAKD,CATD;;AAWA,MAAMI,OAAO,GAAG,YAAW;AACzB,QAAMH,OAAO,GAAG,MAAMJ,KAAK,CAACQ,GAAN,CAAW,qCAAX,EACDC,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASP,OADpB,CAAtB;AAGA,SAAOA,OAAP;AACD,CALD;;AAOA,OAAO,MAAMQ,cAAc,GAAG,MAAMC,GAAN,IAAc;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAWD,GAAjB;AACA,QAAME,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMX,OAAO,GAAG,MAAMG,OAAO,EAA7B;;AACA,MAAG,CAACH,OAAJ,EAAY;AACV,WAAM;AACJY,MAAAA,QAAQ,EAAC;AADL,KAAN;AAGD;;AACD,SAAM;AACJd,IAAAA,KAAK,EAAC;AACJE,MAAAA;AADI,KADF;AAIJa,IAAAA,UAAU,EAAC;AAJP,GAAN;AAOD,CAhBM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAML,GAAN,IAAc;AAC1C,QAAMT,OAAO,GAAG,MAAMG,OAAO,EAA7B,CAD0C,CAE1C;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMe,GAAG,GAAGf,OAAO,CAACgB,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,GAA7B,CAAZ,CAJ0C,CAK1C;;AACA,QAAMR,MAAM,GAAGK,GAAG,CAACC,GAAJ,CAASG,EAAD,KAAS;AAACT,IAAAA,MAAM,EAAC;AAACC,MAAAA,QAAQ,EAACQ;AAAV;AAAR,GAAT,CAAR,CAAf,CAN0C,CAO1C;;AACA,SAAM;AACJC,IAAAA,KAAK,EAACV,MADF;AAEJW,IAAAA,QAAQ,EAAC;AAFL,GAAN;AAID,CAZM;AAcP,eAAexB,YAAf","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport SignalDetail from \"../../components/signal/signaldetail\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst signalDetail = (props) => {\r\n\r\n  const signalData= props.signals;\r\n  console.log(signalData);\r\n  return(\r\n      <>\r\n        <SignalDetail signalData={signalData} />\r\n      </>\r\n  )\r\n}\r\n\r\nconst getData = async() => {\r\n  const signals = await axios.get(`http://127.0.0.2:8000/api/v1/signal`)\r\n                      .then(res => res.data.signals);\r\n\r\n  return signals;\r\n}\r\n\r\nexport const getStaticProps = async(ctx) => {\r\n  const {params} = ctx;\r\n  const signalId = params.signalId;\r\n  const signals = await getData();\r\n  if(!signals){\r\n    return{\r\n      notFound:true\r\n    }\r\n  }\r\n  return{\r\n    props:{\r\n      signals\r\n    },\r\n    revalidate:60\r\n    \r\n  }\r\n}\r\nexport const getStaticPaths = async(ctx) => {\r\n  const signals = await getData();\r\n  //creating id array\r\n  console.log(signals);\r\n  const ids = signals.map(signal => signal._id);\r\n  //converting ids to the form {params:{signalId:id}}\r\n  const params = ids.map((id) => ({params:{signalId:id}}));\r\n  // paths: {params:{signalId:id}}\r\n  return{\r\n    paths:params,\r\n    fallback:\"blocking\"\r\n  }\r\n}\r\n\r\nexport default signalDetail;"]},"metadata":{},"sourceType":"module"}