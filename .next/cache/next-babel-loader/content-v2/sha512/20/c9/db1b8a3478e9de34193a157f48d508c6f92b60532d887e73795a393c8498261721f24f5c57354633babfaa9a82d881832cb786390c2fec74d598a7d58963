{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mohamadhasan tabrizi\\\\Desktop\\\\capitalnext\\\\pages\\\\signal\\\\[signalId].js\";\nimport { useRouter } from \"next/router\";\nimport SignalDetail from \"../../components/signal/signaldetail\";\nimport axios from \"axios\";\n\nconst signalDetail = props => {\n  const signal = props.signal;\n  console.log(signal);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignalDetail, {\n      signalData: signalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nconst getData = async () => {\n  const signals = await axios.get(`http://127.0.0.2:8000/api/v1/signal`).then(res => res.data.signals);\n  return signals;\n};\n\nexport const getStaticProps = async ctx => {\n  const {\n    params\n  } = ctx;\n  const signalId = params.signalId;\n  const signals = await getData();\n  const signal = signals.find(signal => signals._id === signal.signalId);\n\n  if (!signal) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      signal\n    },\n    revalidate: 60\n  };\n};\nexport const getStaticPaths = async ctx => {\n  const signals = await getData(); //creating id array\n\n  console.log(signals);\n  const ids = signals.map(signal => signal._id); //converting ids to the form {params:{signalId:id}}\n\n  const params = ids.map(id => ({\n    params: {\n      signalId: id\n    }\n  })); // paths: {params:{signalId:id}}\n\n  return {\n    paths: params,\n    fallback: \"blocking\"\n  };\n};\nexport default signalDetail;","map":{"version":3,"sources":["C:/Users/mohamadhasan tabrizi/Desktop/capitalnext/pages/signal/[signalId].js"],"names":["useRouter","SignalDetail","axios","signalDetail","props","signal","console","log","signalData","getData","signals","get","then","res","data","getStaticProps","ctx","params","signalId","find","_id","notFound","revalidate","getStaticPaths","ids","map","id","paths","fallback"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B,QAAMC,MAAM,GAAED,KAAK,CAACC,MAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,sBACI;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAKD,CATD;;AAWA,MAAMC,OAAO,GAAG,YAAW;AACzB,QAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,qCAAX,EACDC,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASJ,OADpB,CAAtB;AAGA,SAAOA,OAAP;AACD,CALD;;AAOA,OAAO,MAAMK,cAAc,GAAG,MAAMC,GAAN,IAAc;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAWD,GAAjB;AACA,QAAME,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,QAAMR,OAAO,GAAG,MAAMD,OAAO,EAA7B;AACA,QAAMJ,MAAM,GAAGK,OAAO,CAACS,IAAR,CAAad,MAAM,IAAIK,OAAO,CAACU,GAAR,KAAgBf,MAAM,CAACa,QAA9C,CAAf;;AACA,MAAG,CAACb,MAAJ,EAAW;AACT,WAAM;AACJgB,MAAAA,QAAQ,EAAC;AADL,KAAN;AAGD;;AACD,SAAM;AACJjB,IAAAA,KAAK,EAAC;AACJC,MAAAA;AADI,KADF;AAIJiB,IAAAA,UAAU,EAAC;AAJP,GAAN;AAOD,CAjBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAMP,GAAN,IAAc;AAC1C,QAAMN,OAAO,GAAG,MAAMD,OAAO,EAA7B,CAD0C,CAE1C;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,QAAMc,GAAG,GAAGd,OAAO,CAACe,GAAR,CAAYpB,MAAM,IAAIA,MAAM,CAACe,GAA7B,CAAZ,CAJ0C,CAK1C;;AACA,QAAMH,MAAM,GAAGO,GAAG,CAACC,GAAJ,CAASC,EAAD,KAAS;AAACT,IAAAA,MAAM,EAAC;AAACC,MAAAA,QAAQ,EAACQ;AAAV;AAAR,GAAT,CAAR,CAAf,CAN0C,CAO1C;;AACA,SAAM;AACJC,IAAAA,KAAK,EAACV,MADF;AAEJW,IAAAA,QAAQ,EAAC;AAFL,GAAN;AAID,CAZM;AAcP,eAAezB,YAAf","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport SignalDetail from \"../../components/signal/signaldetail\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst signalDetail = (props) => {\r\n\r\n  const signal= props.signal;\r\n  console.log(signal);\r\n  return(\r\n      <>\r\n        <SignalDetail signalData={signalData} />\r\n      </>\r\n  )\r\n}\r\n\r\nconst getData = async() => {\r\n  const signals = await axios.get(`http://127.0.0.2:8000/api/v1/signal`)\r\n                      .then(res => res.data.signals);\r\n\r\n  return signals;\r\n}\r\n\r\nexport const getStaticProps = async(ctx) => {\r\n  const {params} = ctx;\r\n  const signalId = params.signalId;\r\n  const signals = await getData();\r\n  const signal = signals.find(signal => signals._id === signal.signalId);\r\n  if(!signal){\r\n    return{\r\n      notFound:true\r\n    }\r\n  }\r\n  return{\r\n    props:{\r\n      signal\r\n    },\r\n    revalidate:60\r\n    \r\n  }\r\n}\r\nexport const getStaticPaths = async(ctx) => {\r\n  const signals = await getData();\r\n  //creating id array\r\n  console.log(signals);\r\n  const ids = signals.map(signal => signal._id);\r\n  //converting ids to the form {params:{signalId:id}}\r\n  const params = ids.map((id) => ({params:{signalId:id}}));\r\n  // paths: {params:{signalId:id}}\r\n  return{\r\n    paths:params,\r\n    fallback:\"blocking\"\r\n  }\r\n}\r\n\r\nexport default signalDetail;"]},"metadata":{},"sourceType":"module"}