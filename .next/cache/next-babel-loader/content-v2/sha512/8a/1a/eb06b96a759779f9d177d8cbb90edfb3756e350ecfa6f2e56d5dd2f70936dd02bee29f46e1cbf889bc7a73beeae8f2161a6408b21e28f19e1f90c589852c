{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mohamadhasan tabrizi\\\\Desktop\\\\capitalnext\\\\pages\\\\signal\\\\[signalId].js\",\n    _this = this;\n\nimport { useRouter } from \"next/router\";\nimport SignalDetail from \"../../components/signal/signaldetail\";\n\nvar signalDetail = function signalDetail(props) {\n  var signal = props.signal;\n  console.log(signal);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SignalDetail, {\n      signalData: signal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\nexport var __N_SSG = true;\nexport default signalDetail;","map":{"version":3,"sources":["C:/Users/mohamadhasan tabrizi/Desktop/capitalnext/pages/signal/[signalId].js"],"names":["useRouter","SignalDetail","signalDetail","props","signal","console","log"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE9B,MAAMC,MAAM,GAAED,KAAK,CAACC,MAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,sBACI;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAKD,CATD;;;AAoDA,eAAeF,YAAf","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport SignalDetail from \"../../components/signal/signaldetail\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst signalDetail = (props) => {\r\n\r\n  const signal= props.signal;\r\n  console.log(signal);\r\n  return(\r\n      <>\r\n        <SignalDetail signalData={signal} />\r\n      </>\r\n  )\r\n}\r\n\r\nconst getData = async() => {\r\n  const signals = await axios.get(`http://127.0.0.2:8000/api/v1/signal`)\r\n                      .then(res => res.data.signals);\r\n\r\n  return signals;\r\n}\r\n\r\nexport const getStaticProps = async(ctx) => {\r\n  const id= ctx.params.signalId;\r\n  console.log(id);\r\n  //fetch data from server\r\n  const signals = await getData();\r\n  // find a signal thats id is === signalId\r\n  const signal = signals.find(signal => signal._id === id);\r\n  if(!signal){\r\n    return{\r\n      notFound:true\r\n    }\r\n  }\r\n  return{\r\n    props:{\r\n      signal\r\n    },\r\n    revalidate:60\r\n    \r\n  }\r\n}\r\nexport const getStaticPaths = async(ctx) => {\r\n  const signals = await getData();\r\n  //creating id array\r\n  console.log(signals);\r\n  const ids = signals.map(signal => signal._id);\r\n  //converting ids to the form {params:{signalId:id}}\r\n  const params = ids.map((id) => ({params:{signalId:id}}));\r\n  // paths: {params:{signalId:id}}\r\n  return{\r\n    paths:params,\r\n    fallback:\"blocking\"\r\n  }\r\n}\r\n\r\nexport default signalDetail;"]},"metadata":{},"sourceType":"module"}